generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserState {
  Activo
  Inactivo
  Suspendido
  Eliminado
  Asignado
}

enum UserRole {
  Operador
  Admin
  S_A
}

enum TruckState {
  Activo
  Inactivo
  Mantenimiento
  Transito
  Descarga
  Asignado
}

enum FuelType {
  DIESEL_B5
  DIESEL_B500
  GASOLINA_PREMIUM_95
  GASOLINA_REGULAR_90
  GASOHOL_84
  GASOHOL_90
  GASOHOL_95
  SOLVENTE
  GASOL
  PERSONALIZADO
}

enum DischargeStatus {
  pendiente
  en_proceso
  finalizado
  cancelado
}

model User {
  id         Int          @id @default(autoincrement())
  dni        String       @unique
  name       String
  lastname   String
  email      String       @unique
  password   String       @default("peru2025++")
  role       UserRole     @default(Operador)
  state      UserState    @default(Activo)
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  Assignment Assignment[]

  @@map("users")
}

model Truck {
  id            Int          @id @default(autoincrement())
  placa         String       @unique
  typefuel      FuelType
  capacitygal   Decimal @db.Decimal(10, 2)
  lastRemaining Decimal      @default(0.00)
  state         TruckState   @default(Activo)
  Assignment    Assignment[]

  @@map("trucks")
}

model Customer {
  id          Int         @id @default(autoincrement())
  companyname String      @unique
  ruc         String      @unique
  address     String
  latitude    Decimal?
  longitude   Decimal?
  Discharge   Discharge[]
  ClientAssignment ClientAssignment[]

  @@map("customers")
}

model Assignment {
  id             Int       @id @default(autoincrement())
  truckId        Int
  driverId       Int
  totalLoaded    Decimal
  totalRemaining Decimal
  fuelType       FuelType
  customFuelType String?   // New field for custom fuel types
  isCompleted    Boolean   @default(false)
  completedAt    DateTime?
  notes          String?

  truck            Truck              @relation(fields: [truckId], references: [id])
  driver           User               @relation(fields: [driverId], references: [id])
  discharges       Discharge[]
  clientAssignments ClientAssignment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("assignments")
  @@index([driverId])
  @@index([truckId])
  @@index([createdAt])
  @@index([fuelType])
  @@index([isCompleted])
}

model Discharge {
  id              Int             @id @default(autoincrement())
  valeNumber      String          @unique // PE-000001-2025 format
  assignmentId    Int
  customerId      Int
  totalDischarged Decimal
  status          DischargeStatus @default(pendiente)
  marcadorInicial Decimal?
  marcadorFinal   Decimal?
  cantidadReal    Decimal?
  startTime       DateTime?
  endTime         DateTime?
  
  // Additional fields for complete dispatch system
  operatorEmail   String?         // Email del operario
  kilometraje     Decimal?        // Kilometraje del vehículo
  ubicacion       String?         // Ubicación del despacho
  tipoUnidad      String?         // Tipo de unidad (galones, litros, etc.)
  observaciones   String?         // Observaciones adicionales
  photoUrls       String[]        // URLs de fotos adjuntas
  
  assignment Assignment @relation(fields: [assignmentId], references: [id])
  customer   Customer   @relation(fields: [customerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("discharges")
  @@index([assignmentId])
  @@index([customerId])
  @@index([status])
  @@index([createdAt])
  @@index([valeNumber])
}

model ClientAssignment {
  id                Int       @id @default(autoincrement())
  assignmentId      Int
  customerId        Int
  allocatedQuantity Decimal   @db.Decimal(10, 2)
  deliveredQuantity Decimal   @default(0) @db.Decimal(10, 2)
  remainingQuantity Decimal   @default(0) @db.Decimal(10, 2)
  status            String    @default("pending") // "pending", "completed", "expired"
  marcadorInicial   Decimal?  @db.Decimal(10, 2)
  marcadorFinal     Decimal?  @db.Decimal(10, 2)
  completedAt       DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  assignment Assignment @relation(fields: [assignmentId], references: [id])
  customer   Customer   @relation(fields: [customerId], references: [id])

  @@index([assignmentId])
  @@index([customerId])
  @@index([status])
}
